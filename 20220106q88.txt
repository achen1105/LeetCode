class Solution 
{
    public void merge(int[] nums1, int m, int[] nums2, int n) 
    {
        Stack<Integer> s1 = new Stack<>();
        Stack<Integer> s2 = new Stack<>();
        
        for (int i = m-1; i >= 0; i--)
        {
            s1.push(nums1[i]);
        }
        
        for (int j = n-1; j >= 0; j--)
        {
            s2.push(nums2[j]);
        }
        
        int index = 0;
        
        while (!s1.empty() || !s2.empty())
        {
            if (s1.empty())
            {
                nums1[index] = s2.pop();
            }
            else if (s2.empty())
            {
                nums1[index] = s1.pop();
            }
            else if (s1.peek() <= s2.peek())
            {
                nums1[index] = s1.pop();
            }
            else
            {
                nums1[index] = s2.pop();
            }
            
            index++;
        }
    }
}